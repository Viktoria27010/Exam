import re
def _parse(self) -> tuple[str, str]:
        with open(self.string) as fp:
             name, seq = None, []
             for line in self.string:
              line = line.rstrip()
             if line.startswith(">"):
                if name: yield (name, ''.join(seq))
                name, seq = line, []
             else:
                seq.append(line)
             if name: yield (name, ''.join(seq))
        fasted = [name, seq] 
        return fasted



 def _parse(self) -> tuple[str, str]:
        motifs = dict()
        with open(self.string) as fp:
            lines = f.readlines()
            for i in range(0, len(lines)):
             s = lines[i].strip()
            if s[0] == '>':
             key = s[1:]
            else:
             motifs[key] = s
             motifs_tup = tuple(motifs.items())
        return motifs_tup
    